<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.microvideo.domain.classMapper">
	<!-- 
		association:用于一对一的关联查询
		property：对象属性的名称
		javaType：对象属性的类型
		column：所对应的外键字段名称
		select：使用另一个查询封装的结果
		collection:做一对多关联查询
		ofType：指定集合中元素对象的类型
	 -->
	<!-- 联表查询 select * from class c,teacher t where c.teacher_id=t.t_id and 
		c.c_id=1; -->
	<select id="getClass" parameterType="int" resultMap="ClassResultMap">
		select * from class c, teacher t where c.teacher_id=t.t_id and c.c_id=#{id}
	</select>
	<resultMap type="Classes" id="ClassResultMap">
		<id property="id" column="c_id" />
		<result property="name" column="c_name" />
		<association property="teacher" javaType="Teacher">
			<id property="id" column="t_id" />
			<result property="name" column="t_name" />
		</association>
	</resultMap>

	<!-- 执行两次查询 select * from class where c_id=1; //teacher_id=1 
	select * from teacher where t_id=1;//使用上面得到的teacher_id -->
	<select id="getClass2" parameterType="int" resultMap="ClassResultMap2">
		select * from class where c_id=#{id}
	</select>
	<resultMap type="Classes" id="ClassResultMap2">
		<id property="id" column="c_id" />
		<result property="name" column="c_name" />
		<association property="teacher" column="teacher_id"
			select="getTeacher">
		</association>
	</resultMap>

	<select id="getTeacher" parameterType="int" resultType="Teacher">
		SELECT t_id id, t_name name FROM teacher WHERE t_id=#{id}
	</select>
	
	<!-- 根据classId查询对应的班级信息，包括学生、老师 
		select * from class c,teacher t,student s where c.teacher_id=t.t_id and c.C_id=s.class_id and c.c_id=1;
	-->
	<select id="getClass3" parameterType="int" resultMap="ClassResultMap3">
		select * from class c,teacher t,student s where c.teacher_id=t.t_id and c.C_id=s.class_id and c.c_id=#{id};
	</select>
	<resultMap type="Classes" id="ClassResultMap3">
		<id property="id" column="c_id"/>
		<result property="name" column="c_name"/>
		<association property="teacher" column="teacher_id" javaType="Teacher">
			<id property="id" column="t_id"/>
			<result property="name" column="t_name"/>
		</association>
		<collection property="students" ofType="Student">
			<id property="id" column="s_id"/>
		   <result property="name" column="s_name"/>
		</collection>
	</resultMap>
</mapper>
